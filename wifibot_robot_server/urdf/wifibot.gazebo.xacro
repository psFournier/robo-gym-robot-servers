<?xml version="1.0" ?>
<robot name="Wifibot"  xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:arg name="namespace" default="wifibot" />
  <xacro:arg name="sensor_list" default="bumper lidar camera" />
  <xacro:arg name="gpu" default="false"/>
  <xacro:arg name="enable_ground_truth" default="true"/>

  <xacro:include filename="$(find wifibot_description)/urdf/wifibot_base.urdf.xacro" />
  <!-- Import Rviz colors -->
  <xacro:include filename="$(find wifibot_robot_server)/urdf/materials.xacro" />
  
  <xacro:property name="namespace" default="$(arg namespace)" />
  <xacro:property name="gpu" default="$(arg gpu)" />

  <link name="${namespace}/base_link"/>

  <xacro:wifibot namespace="${namespace}" parent="${namespace}/base_link">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:wifibot>

  <!-- Add Motor controller -->
  <gazebo>
    <plugin name="ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace></robotNamespace>
    </plugin>
  </gazebo>


  <!-- SENSORS -->

    <xacro:if value="$(arg enable_ground_truth)">
      <gazebo>
        <plugin name="robot_groundtruth_sim" filename="libgazebo_ros_p3d.so">
          <robotNamespace>/${namespace}</robotNamespace>
          <bodyName>${namespace}/base_link</bodyName>
          <frameName>world</frameName>
          <topicName>base_pose_ground_truth</topicName>
          <alwaysOn>true</alwaysOn>
          <updateRate>100.0</updateRate>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffsets>0 0 0</xyzOffsets>
          <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>
      </gazebo>
    </xacro:if>

  <!-- Bumper: collision detection ; attention on utilise clairement une boite autour du robot comme box simplifiée pour le bumper... donc pas un bumper réel ?-->
  <xacro:if value="$(eval 'bumper' in sensor_list)">
    <xacro:include filename="$(find copernic_gazebo)/urdf/sensors/others/bumper.gazebo.xacro" />
    <xacro:bumper namespace="${namespace}" parent="${namespace}/base_link" visual="false" >
          <origin xyz=" 0.0 0.0 0.15" rpy="0 0 0"/>
          <box size="0.50 0.50 0.40"/>
    </xacro:bumper>
  </xacro:if>

  <!-- Laser scans -->
  <xacro:if value="$(eval 'lidar' in sensor_list)">
    <xacro:include filename="$(find wifibot_robot_server)/urdf/sensors/hokuyo.gazebo.xacro" />
    <xacro:hokuyo namespace="${namespace}" parent="${namespace}/base_link" gpu="${gpu}">
          <origin xyz=" 0.0 0.0 0.15" rpy="0 0 0"/>
    </xacro:hokuyo>
  </xacro:if>

  <!-- Gazebo camera -->
  <xacro:if value="$(eval 'camera' in sensor_list)">

    <joint name="camera_joint" type="fixed">
      <axis xyz="0 1 0" />
      <origin xyz="0 0 0.3" rpy="0 0 0"/>
      <parent link="${namespace}/base_link"/>
      <child link="${namespace}/camera_link"/>
    </joint>

    <link name="${namespace}/camera_link">

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.1 0.1 0.1"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.1 0.1 0.1"/>
        </geometry>
        <material name="red"/>
      </visual>

      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>

    </link>

    <gazebo reference="${namespace}/camera_link">
      <material>Gazebo/Red</material>
    </gazebo>

    <gazebo reference="${namespace}/camera_link">
      <sensor type="camera" name="camera1">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <!--robotNamespace>/${namespace}</robotNamespace-->
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${namespace}/camera1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${namespace}/camera_link</frameName>
          <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
              between the gazebo sensor image and the frame it is supposed to
              be attached to -->
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0.0</Cx>
          <Cy>0.0</Cy>
          <focalLength>0.0</focalLength>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:if>



</robot>
